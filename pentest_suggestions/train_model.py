import pandas as pd
import joblib
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Load the dataset
data = pd.read_csv('data/pentest_data.csv')

# Extract features and target variable
features = data[['Pentest Goal', 'Type of System', 'Tools Category', 'Platform']]
target = data['Suggested Tools']

# Encode categorical features
label_encoders = {}
for column in features.columns:
    le = LabelEncoder()
    features.loc[:,column] = le.fit_transform(features[column])
    label_encoders[column] = le

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Train the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Evaluate the model
predictions = model.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print(f'Accuracy: {accuracy}')

# Save the model and label encoders
joblib.dump(model, 'models/pentest_model.pkl')
for column, le in label_encoders.items():
    joblib.dump(le, f'models/{column.lower().replace(" ", "_")}_encoder.pkl')

print("Model and encoders saved successfully.")
